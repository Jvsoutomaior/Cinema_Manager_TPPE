services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    networks:
      - postgres-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 60s
      retries: 10
  
  database:
    image: postgres
    environment:
      POSTGRES_DB: MyDatabase
      POSTGRES_USER: admin
      POSTGRES_PASSWORD : password
    ports:
      - 5432:5432
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d MyDatabase"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 15432:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    depends_on:
      - database
    networks:
      - postgres-network
    
  testing:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      database:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - postgres-network
    environment: # needs this to connect to the database
      POSTGRES_DB: MyDatabase
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password

networks: 
  postgres-network:
    driver: bridge
